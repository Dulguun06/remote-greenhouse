// Servo - Version: Latest 


/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/c4905e78-bbf2-4f7a-9284-8dd22499cc37

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight alarm1;
  CloudLight alarm2;
  CloudLight alarm3;
  CloudLight automode;
  CloudLight door;
  CloudLight garahled;
  CloudLight sens_garah;
  CloudLight sens_soroh;
  CloudLight sorohled;
  CloudTemperatureSensor gadaatemp;
  CloudTemperatureSensor temperature;
  CloudRelativeHumidity humidity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include <Servo.h>
#include "thingProperties.h"
#include "DHT.h"

#define DHTPIN 15
#define DHTTYPE DHT11
float sensor = 34;
DHT dht(DHTPIN, DHTTYPE);
Servo myservo;

void setup() {
  dht.begin();
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);
  pinMode(2, OUTPUT); // soroh sens
  pinMode(13, OUTPUT); // garah sens
  pinMode(35, INPUT);  // haalga medregch
  pinMode(sensor,INPUT);
  myservo.attach(5);
  
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  
  ArduinoCloud.update();
  DHT_SENSOR_READ();
  // SendHumidityToNextion();
  // SendTemperatureToNextion();
  if(automode == 1){
  float t = dht.readTemperature();
      if (t > 47) {
        digitalWrite(13, HIGH);
        digitalWrite(2, HIGH);
        sorohled = 1;
        garahled = 1;
      }
      if (40 > t) {
        digitalWrite(13, LOW);
        digitalWrite(2, LOW);
        sorohled = 0;
        garahled = 0;
      }
      sens_soroh = 0;
      sens_garah = 0;
  }    
  if(digitalRead(35) == 1){ // haalga signal
    alarm1 = 1;
    Serial.println(1);
  }
  else{
    alarm1 = 0;
    Serial.println(0);
  }
  
  float t = dht.readTemperature();
  if (t > 50) { // 50 gradus deesh signal
    alarm2 = 1;
  }
  else{
    alarm2 = 0;
  }
  
  if (t < 10) { // 10 gradusaas doosh signal
    alarm3 = 1;
  }
  else{
    alarm3 = 0;
  }
  int  a = analogRead(sensor);
  int b = (a / (4096 / 180)) - 55 ;
   gadaatemp = b;
   Serial.print("gadaa"); Serial.println(b);
  
}


/*
  Since Led is READ_WRITE variable, onLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
// void SendHumidityToNextion{
//   String command = "t2.txt=\"+string(dht.readHumidity())+"/""
//   endNextionCommand()
// }

void onSensSorohChange()  {
    if (sens_soroh == 1) {
      digitalWrite(2, HIGH);
      sorohled = 1;
    }
    else{
      digitalWrite(2, LOW);
      sorohled = 0;
    }
  }
  // Add your code here to act upon Led change
void onSensGarahChange()  {
  if (sens_garah == 1) {
      digitalWrite(13, HIGH);
      garahled = 1;
    }
    else{
      digitalWrite(13, LOW);
      garahled = 0;
    }
}  
  
void DHT_SENSOR_READ() {
  float h = dht.readHumidity();
  float t = dht.readTemperature();

  temperature = t;
  humidity = h;

  // sendHumidityToNextion();
  Serial.print("temperature-"); Serial.println(t);
  Serial.print("Humidity-"); Serial.println(h);
  delay(500);
}




void onHumidityChange()  {
  
  }
  
void onGadaatempChange()  {
  // int 34;
  // int  a = analogRead(sensor);
  // a = a / 10;
  // gadaatemp = a;
  // Serial.print("gadaa"); Serial.println(a);
  // int Vo;
  // float R1 = 10000; // value of R1 on board
  // float logR2, R2, T;
  // float c1 = 0.001129148, c2 = 0.000234125, c3 = 0.0000000876741; //steinhart-hart coeficients
  // // loop
  // Vo = analogRead(ThermistorPin);
  // R2 = R1 * (1023.0 / (float)Vo - 1.0); //calculate resistance on thermistor
  // logR2 = log(R2);
  // T = (1.0 / (c1 + c2 * logR2 + c3 * logR2 * logR2 * logR2)); // temperature in Kelvin
  // T = T - 273.15;
  // gadaatemp = T;
  // delay(500);
  // Serial.println(T);
}


void onAlarm1Change()  {
  // if(digitalRead(35) == 1){
  //   alarm1 = 1;
  //   Serial.println(1);
  // }
  // else{
  //   alarm1 = 0;
  //   Serial.println(0);
  // }
}

/*
  Since Alarm2 is READ_WRITE variable, onAlarm2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onAlarm2Change()  {
  // float t = dht.readTemperature();
  //     if (t > 50) {
  //       alarm2 = 1;
  //     }
  //     else{
  //       alarm2 = 0;
  //     }
}

/*
  Since Alarm3 is READ_WRITE variable, onAlarm3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onAlarm3Change()  {
  // float t = dht.readTemperature();
  //     if (t < 10) {
  //       alarm3 = 1;
  //     }
  //     else{
  //       alarm3 = 0;
  //     }
}





/*
  Since Automode is READ_WRITE variable, onAutomodeChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAutomodeChange()  {
  // Add your code here to act upon Automode change
}



/*
  Since Door is READ_WRITE variable, onDoorChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onDoorChange()  {
  if(door==1){
    myservo.write(90);
  }
  else{
    myservo.write(0);
  }
  // Add your code here to act upon Door change
}
